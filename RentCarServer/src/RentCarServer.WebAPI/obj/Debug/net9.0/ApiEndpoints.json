[
  {
    "ContainingType": "Program\u002B\u003C\u003Ec",
    "Method": "\u003C\u003CMain\u003E$\u003Eb__0_5",
    "RelativePath": "",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.AuthModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapAuth\u003Eb__0_4",
    "RelativePath": "auth/check-forgot-password-code/{forgotPasswordCode}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "forgotPasswordCode",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Auth"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.AuthModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapAuth\u003Eb__0_2",
    "RelativePath": "auth/forgot-password/{email}",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Auth"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.AuthModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapAuth\u003Eb__0_0",
    "RelativePath": "auth/login",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RentCarServer.Application.Auth.LoginCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[RentCarServer.Application.Auth.LogincommandResponse, RentCarServer.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Auth"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.AuthModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapAuth\u003Eb__0_1",
    "RelativePath": "auth/login-with-tfa",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RentCarServer.Application.Auth.LoginWithTFACommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[RentCarServer.Application.Auth.LogincommandResponse, RentCarServer.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Auth"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.AuthModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapAuth\u003Eb__0_3",
    "RelativePath": "auth/reset-password",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RentCarServer.Application.Auth.ResetPasswordCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Auth"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.BranchModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapBranch\u003Eb__0_0",
    "RelativePath": "branches/",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RentCarServer.Application.Branches.BranchCreateCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Branches"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.BranchModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapBranch\u003Eb__0_1",
    "RelativePath": "branches/",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RentCarServer.Application.Branches.BranchUpdateCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Branches"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.BranchModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapBranch\u003Eb__0_2",
    "RelativePath": "branches/{id}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Branches"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.BranchModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapBranch\u003Eb__0_3",
    "RelativePath": "branches/{id}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[RentCarServer.Application.Branches.BranchDto, RentCarServer.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Branches"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.CategoryModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapCategory\u003Eb__0_0",
    "RelativePath": "categories/",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RentCarServer.Application.Categories.CategoryCreateCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Categories"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.CategoryModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapCategory\u003Eb__0_1",
    "RelativePath": "categories/",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RentCarServer.Application.Categories.CategoryUpdateCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Categories"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.CategoryModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapCategory\u003Eb__0_2",
    "RelativePath": "categories/{id}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Categories"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.CategoryModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapCategory\u003Eb__0_3",
    "RelativePath": "categories/{id}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[RentCarServer.Application.Categories.CategoryDto, RentCarServer.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Categories"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.CustomerModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapCustomer\u003Eb__0_0",
    "RelativePath": "customers/",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RentCarServer.Application.Customers.CustomerCreateCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Customers"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.CustomerModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapCustomer\u003Eb__0_1",
    "RelativePath": "customers/",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RentCarServer.Application.Customers.CustomerUpdateCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Customers"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.CustomerModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapCustomer\u003Eb__0_2",
    "RelativePath": "customers/{id}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Customers"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.CustomerModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapCustomer\u003Eb__0_3",
    "RelativePath": "customers/{id}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[RentCarServer.Application.Customers.CustomerDto, RentCarServer.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Customers"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.ExtraModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapExtra\u003Eb__0_0",
    "RelativePath": "extras/",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RentCarServer.Application.Extras.ExtraCreateCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Extras"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.ExtraModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapExtra\u003Eb__0_1",
    "RelativePath": "extras/",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RentCarServer.Application.Extras.ExtraUpdateCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Extras"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.ExtraModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapExtra\u003Eb__0_2",
    "RelativePath": "extras/{id}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Extras"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.ExtraModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapExtra\u003Eb__0_3",
    "RelativePath": "extras/{id}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[RentCarServer.Application.Extras.ExtraDto, RentCarServer.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Extras"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Controllers.MainODataController",
    "Method": "Branches",
    "RelativePath": "odata/branches",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Linq.IQueryable\u00601[[RentCarServer.Application.Branches.BranchDto, RentCarServer.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=minimal;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=minimal;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;IEEE754Compatible=true",
          "application/json;odata.metadata=full;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=full;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=full;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=full;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=full;IEEE754Compatible=false",
          "application/json;odata.metadata=full;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=none;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=none;IEEE754Compatible=false",
          "application/json;odata.metadata=none;IEEE754Compatible=true",
          "application/json;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.streaming=false;IEEE754Compatible=true",
          "application/json;IEEE754Compatible=false",
          "application/json;IEEE754Compatible=true",
          "application/xml",
          "application/json",
          "text/plain",
          "application/octet-stream",
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Controllers.MainODataController",
    "Method": "Categories",
    "RelativePath": "odata/categories",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Linq.IQueryable\u00601[[RentCarServer.Application.Categories.CategoryDto, RentCarServer.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=minimal;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=minimal;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;IEEE754Compatible=true",
          "application/json;odata.metadata=full;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=full;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=full;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=full;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=full;IEEE754Compatible=false",
          "application/json;odata.metadata=full;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=none;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=none;IEEE754Compatible=false",
          "application/json;odata.metadata=none;IEEE754Compatible=true",
          "application/json;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.streaming=false;IEEE754Compatible=true",
          "application/json;IEEE754Compatible=false",
          "application/json;IEEE754Compatible=true",
          "application/xml",
          "application/json",
          "text/plain",
          "application/octet-stream",
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Controllers.MainODataController",
    "Method": "Customers",
    "RelativePath": "odata/customers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Linq.IQueryable\u00601[[RentCarServer.Application.Customers.CustomerDto, RentCarServer.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=minimal;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=minimal;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;IEEE754Compatible=true",
          "application/json;odata.metadata=full;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=full;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=full;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=full;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=full;IEEE754Compatible=false",
          "application/json;odata.metadata=full;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=none;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=none;IEEE754Compatible=false",
          "application/json;odata.metadata=none;IEEE754Compatible=true",
          "application/json;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.streaming=false;IEEE754Compatible=true",
          "application/json;IEEE754Compatible=false",
          "application/json;IEEE754Compatible=true",
          "application/xml",
          "application/json",
          "text/plain",
          "application/octet-stream",
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Controllers.MainODataController",
    "Method": "Extras",
    "RelativePath": "odata/extras",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Linq.IQueryable\u00601[[RentCarServer.Application.Extras.ExtraDto, RentCarServer.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=minimal;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=minimal;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;IEEE754Compatible=true",
          "application/json;odata.metadata=full;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=full;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=full;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=full;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=full;IEEE754Compatible=false",
          "application/json;odata.metadata=full;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=none;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=none;IEEE754Compatible=false",
          "application/json;odata.metadata=none;IEEE754Compatible=true",
          "application/json;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.streaming=false;IEEE754Compatible=true",
          "application/json;IEEE754Compatible=false",
          "application/json;IEEE754Compatible=true",
          "application/xml",
          "application/json",
          "text/plain",
          "application/octet-stream",
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Controllers.MainODataController",
    "Method": "ProtectionPackages",
    "RelativePath": "odata/protection-packages",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Linq.IQueryable\u00601[[RentCarServer.Application.ProtectionPackages.ProtectionPackageDto, RentCarServer.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=minimal;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=minimal;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;IEEE754Compatible=true",
          "application/json;odata.metadata=full;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=full;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=full;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=full;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=full;IEEE754Compatible=false",
          "application/json;odata.metadata=full;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=none;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=none;IEEE754Compatible=false",
          "application/json;odata.metadata=none;IEEE754Compatible=true",
          "application/json;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.streaming=false;IEEE754Compatible=true",
          "application/json;IEEE754Compatible=false",
          "application/json;IEEE754Compatible=true",
          "application/xml",
          "application/json",
          "text/plain",
          "application/octet-stream",
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Controllers.MainODataController",
    "Method": "Reservations",
    "RelativePath": "odata/reservations",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Linq.IQueryable\u00601[[RentCarServer.Application.Reservations.ReservationDto, RentCarServer.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=minimal;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=minimal;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;IEEE754Compatible=true",
          "application/json;odata.metadata=full;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=full;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=full;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=full;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=full;IEEE754Compatible=false",
          "application/json;odata.metadata=full;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=none;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=none;IEEE754Compatible=false",
          "application/json;odata.metadata=none;IEEE754Compatible=true",
          "application/json;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.streaming=false;IEEE754Compatible=true",
          "application/json;IEEE754Compatible=false",
          "application/json;IEEE754Compatible=true",
          "application/xml",
          "application/json",
          "text/plain",
          "application/octet-stream",
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Controllers.MainODataController",
    "Method": "Roles",
    "RelativePath": "odata/roles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Linq.IQueryable\u00601[[RentCarServer.Application.Roles.RoleDto, RentCarServer.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=minimal;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=minimal;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;IEEE754Compatible=true",
          "application/json;odata.metadata=full;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=full;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=full;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=full;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=full;IEEE754Compatible=false",
          "application/json;odata.metadata=full;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=none;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=none;IEEE754Compatible=false",
          "application/json;odata.metadata=none;IEEE754Compatible=true",
          "application/json;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.streaming=false;IEEE754Compatible=true",
          "application/json;IEEE754Compatible=false",
          "application/json;IEEE754Compatible=true",
          "application/xml",
          "application/json",
          "text/plain",
          "application/octet-stream",
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Controllers.MainODataController",
    "Method": "Users",
    "RelativePath": "odata/users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Linq.IQueryable\u00601[[RentCarServer.Application.Users.UserDto, RentCarServer.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=minimal;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=minimal;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;IEEE754Compatible=true",
          "application/json;odata.metadata=full;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=full;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=full;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=full;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=full;IEEE754Compatible=false",
          "application/json;odata.metadata=full;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=none;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=none;IEEE754Compatible=false",
          "application/json;odata.metadata=none;IEEE754Compatible=true",
          "application/json;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.streaming=false;IEEE754Compatible=true",
          "application/json;IEEE754Compatible=false",
          "application/json;IEEE754Compatible=true",
          "application/xml",
          "application/json",
          "text/plain",
          "application/octet-stream",
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Controllers.MainODataController",
    "Method": "Vehicles",
    "RelativePath": "odata/vehicles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Linq.IQueryable\u00601[[RentCarServer.Application.Vehicles.VehicleDto, RentCarServer.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json;odata.metadata=minimal;odata.streaming=true",
          "application/json;odata.metadata=minimal;odata.streaming=false",
          "application/json;odata.metadata=minimal",
          "application/json;odata.metadata=full;odata.streaming=true",
          "application/json;odata.metadata=full;odata.streaming=false",
          "application/json;odata.metadata=full",
          "application/json;odata.metadata=none;odata.streaming=true",
          "application/json;odata.metadata=none;odata.streaming=false",
          "application/json;odata.metadata=none",
          "application/json;odata.streaming=true",
          "application/json;odata.streaming=false",
          "application/json",
          "application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=minimal;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=minimal;IEEE754Compatible=false",
          "application/json;odata.metadata=minimal;IEEE754Compatible=true",
          "application/json;odata.metadata=full;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=full;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=full;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=full;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=full;IEEE754Compatible=false",
          "application/json;odata.metadata=full;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.metadata=none;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=false;IEEE754Compatible=true",
          "application/json;odata.metadata=none;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.metadata=none;IEEE754Compatible=false",
          "application/json;odata.metadata=none;IEEE754Compatible=true",
          "application/json;odata.streaming=true;IEEE754Compatible=false",
          "application/json;odata.streaming=true;IEEE754Compatible=true",
          "application/json;odata.streaming=false;IEEE754Compatible=false",
          "application/json;odata.streaming=false;IEEE754Compatible=true",
          "application/json;IEEE754Compatible=false",
          "application/json;IEEE754Compatible=true",
          "application/xml",
          "application/json",
          "text/plain",
          "application/octet-stream",
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.PermissionModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapPermission\u003Eb__0_0",
    "RelativePath": "permissions/",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.Collections.Generic.List\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Permissions"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.ProtectionPackageModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapProtectionPackage\u003Eb__0_0",
    "RelativePath": "protection-packages/",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RentCarServer.Application.ProtectionPackages.ProtectionPackageCreateCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "ProtectionPackages"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.ProtectionPackageModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapProtectionPackage\u003Eb__0_1",
    "RelativePath": "protection-packages/",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RentCarServer.Application.ProtectionPackages.ProtectionPackageUpdateCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "ProtectionPackages"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.ProtectionPackageModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapProtectionPackage\u003Eb__0_2",
    "RelativePath": "protection-packages/{id}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "ProtectionPackages"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.ProtectionPackageModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapProtectionPackage\u003Eb__0_3",
    "RelativePath": "protection-packages/{id}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[RentCarServer.Application.ProtectionPackages.ProtectionPackageDto, RentCarServer.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "ProtectionPackages"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Controllers.ReservationFormsController",
    "Method": "UpdateForm",
    "RelativePath": "reservation-form",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ReservationId",
        "Type": "System.Guid",
        "IsRequired": false
      },
      {
        "Name": "Type",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Kilometer",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "ImageFiles",
        "Type": "System.Collections.Generic.List\u00601[[Microsoft.AspNetCore.Http.IFormFile, Microsoft.AspNetCore.Http.Features, Version=9.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "IsRequired": false
      },
      {
        "Name": "Supplies",
        "Type": "System.Collections.Generic.List\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "Damages",
        "Type": "System.Collections.Generic.List\u00601[[RentCarServer.Domain.Reservations.Forms.ValueObjects.Damage, RentCarServer.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": false
      },
      {
        "Name": "Note",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.ReservationModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapReservationForm\u003Eb__1_0",
    "RelativePath": "reservation-form/{reservationId}/{type}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reservationId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "type",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[RentCarServer.Application.Reservations.Froms.FormDto, RentCarServer.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "ReservationForm"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.ReservationModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapReservation\u003Eb__0_0",
    "RelativePath": "reservations/",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RentCarServer.Application.Reservations.ReservationCreateCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Reservations"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.ReservationModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapReservation\u003Eb__0_1",
    "RelativePath": "reservations/",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RentCarServer.Application.Reservations.ReservationUpdateCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Reservations"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.ReservationModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapReservation\u003Eb__0_2",
    "RelativePath": "reservations/{id}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Reservations"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.ReservationModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapReservation\u003Eb__0_3",
    "RelativePath": "reservations/{id}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[RentCarServer.Application.Reservations.ReservationDto, RentCarServer.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Reservations"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.ReservationModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapReservation\u003Eb__0_4",
    "RelativePath": "reservations/vehicle-getall",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RentCarServer.Application.Reservations.ReservationGetAllVehicleQuery",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.Collections.Generic.List\u00601[[RentCarServer.Application.Vehicles.VehicleDto, RentCarServer.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Reservations"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.RoleModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapRole\u003Eb__0_0",
    "RelativePath": "roles/",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RentCarServer.Application.Roles.RoleCreateCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Roles"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.RoleModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapRole\u003Eb__0_1",
    "RelativePath": "roles/",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RentCarServer.Application.Roles.RoleUpdateCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Roles"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.RoleModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapRole\u003Eb__0_2",
    "RelativePath": "roles/{id}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Roles"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.RoleModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapRole\u003Eb__0_3",
    "RelativePath": "roles/{id}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[RentCarServer.Application.Roles.RoleDto, RentCarServer.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Roles"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.RoleModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapRole\u003Eb__0_4",
    "RelativePath": "roles/update-permissions",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RentCarServer.Application.Roles.RoleUpdatePermissionsCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Roles"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.UserModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapUser\u003Eb__0_0",
    "RelativePath": "users/",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RentCarServer.Application.Users.UserCreateCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Users"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.UserModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapUser\u003Eb__0_1",
    "RelativePath": "users/",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RentCarServer.Application.Users.UserUpdateCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Users"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.UserModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapUser\u003Eb__0_2",
    "RelativePath": "users/{id}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Users"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.UserModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapUser\u003Eb__0_3",
    "RelativePath": "users/{id}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[RentCarServer.Application.Users.UserDto, RentCarServer.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Users"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.VehicleModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapVehicle\u003Eb__0_0",
    "RelativePath": "vehicles/",
    "HttpMethod": "POST",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RentCarServer.Application.Vehicles.VehicleCreateCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Vehicles"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.VehicleModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapVehicle\u003Eb__0_1",
    "RelativePath": "vehicles/",
    "HttpMethod": "PUT",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "RentCarServer.Application.Vehicles.VehicleUpdateCommand",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Vehicles"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.VehicleModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapVehicle\u003Eb__0_2",
    "RelativePath": "vehicles/{id}",
    "HttpMethod": "DELETE",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Vehicles"
    ]
  },
  {
    "ContainingType": "RentCarServer.WebAPI.Modules.VehicleModule\u002B\u003C\u003Ec",
    "Method": "\u003CMapVehicle\u003Eb__0_3",
    "RelativePath": "vehicles/{id}",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "TS.Result.Result\u00601[[RentCarServer.Application.Vehicles.VehicleDto, RentCarServer.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      }
    ],
    "Tags": [
      "Vehicles"
    ]
  }
]